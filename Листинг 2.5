#include <iostream>
#include <cmath>

double power(double a, int n) {
    if (n == 0) return 1; // Базовый случай: a^0 = 1
    double x = power(a, n / 2); // Рекурсивный вызов для n/2
    if (n % 2 == 0) {
        return x * x; // Если n четное, возвращаем x^2
    } else {
        return a * x * x; // Если n нечетное, возвращаем a * x^2
    }
}

int main() {
    double a = 2.0;
    int n = 5;
    std::cout << a << " raised to the power of " << n << " is " << power(a, n) << std::endl;
    return 0;
}


/*  ### Основные изменения:
1. Типы данных:
   - Используется double для переменной a, чтобы поддерживать возведение в степень для дробных чисел.
   - Используется int для переменной n, так как степень должна быть целым числом.

2. Рекурсия:
   - Функция power вызывает саму себя для вычисления степени с половинным значением n.

3. Проверка четности:
   - Используется оператор % для проверки, является ли n четным или нечетным.

4. Базовый случай:
   - Если n равно 0, функция возвращает 1, так как любое число в степени 0 равно 1.

### Пример работы:
- В main задаются значения a и n.
- Функция power вычисляет значение a в степени n и возвращает результат.
- Результат выводится на экран.

Этот код реализует алгоритм быстрого возведения в степень с использованием рекурсии и проверки четности степени.*/
